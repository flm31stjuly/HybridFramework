<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="2" total="4" passed="1" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-11-06T19:30:41 IST" name="Suite" finished-at="2023-11-06T19:31:11 IST" duration-ms="29918">
    <groups>
    </groups>
    <test started-at="2023-11-06T19:30:41 IST" name="Test" finished-at="2023-11-06T19:31:11 IST" duration-ms="29918">
      <class name="testscripts.regression.ValidateRegistrationUsingPOM">
        <test-method is-config="true" signature="setUp(org.testng.ITestContext)[pri:0, instance:testscripts.regression.ValidateRegistrationUsingPOM@55a147cc]" started-at="2023-11-06T19:30:58 IST" name="setUp" finished-at="2023-11-06T19:31:02 IST" duration-ms="4405" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@beabd6b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="validateRegistration(java.util.HashMap)[pri:0, instance:testscripts.regression.ValidateRegistrationUsingPOM@55a147cc]" started-at="2023-11-06T19:31:02 IST" name="validateRegistration" data-provider="getData" finished-at="2023-11-06T19:31:06 IST" duration-ms="4299" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Expected Title=Adactin.com - New User Registration, Username=Ravi0111, Captcha Text=marbly, Confirm Password=Ravi123, Full Name=Ravi Kumar, Password=Ravi123, Email Address=ravi12@gmail.com}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at testscripts.regression.ValidateRegistrationUsingPOM.validateRegistration(ValidateRegistrationUsingPOM.java:47)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateRegistration -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:testscripts.regression.ValidateRegistrationUsingPOM@55a147cc]" started-at="2023-11-06T19:31:07 IST" name="teardown" finished-at="2023-11-06T19:31:10 IST" duration-ms="3399" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- testscripts.regression.ValidateRegistrationUsingPOM -->
      <class name="testscripts.regression.ValidateLoginUsingPOM2">
        <test-method is-config="true" signature="filesRead()[pri:0, instance:testscripts.regression.ValidateLoginUsingPOM2@6574a52c]" started-at="2023-11-06T19:30:41 IST" name="filesRead" finished-at="2023-11-06T19:30:41 IST" duration-ms="558" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- filesRead -->
        <test-method is-config="true" signature="setUp(org.testng.ITestContext)[pri:0, instance:testscripts.regression.ValidateLoginUsingPOM2@6574a52c]" started-at="2023-11-06T19:30:43 IST" name="setUp" finished-at="2023-11-06T19:30:49 IST" duration-ms="6096" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@beabd6b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="validateLoginTest(java.util.HashMap)[pri:0, instance:testscripts.regression.ValidateLoginUsingPOM2@6574a52c]" started-at="2023-11-06T19:30:49 IST" name="validateLoginTest" data-provider="getData" finished-at="2023-11-06T19:30:54 IST" duration-ms="4808" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Expected Title=Adactin.com - Search Hotel, password=reyaz123, username=reyaz009}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateLoginTest -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:testscripts.regression.ValidateLoginUsingPOM2@6574a52c]" started-at="2023-11-06T19:30:54 IST" name="teardown" finished-at="2023-11-06T19:30:58 IST" duration-ms="3433" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="closeReports()[pri:0, instance:testscripts.regression.ValidateLoginUsingPOM2@6574a52c]" started-at="2023-11-06T19:31:10 IST" name="closeReports" finished-at="2023-11-06T19:31:11 IST" duration-ms="616" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeReports -->
      </class> <!-- testscripts.regression.ValidateLoginUsingPOM2 -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
